import boto3
import os

def lambda_handler(event, context):
    rds_client = boto3.client('rds')
    environments = ['ci', 'cert', 'perftest', 'dev']

    try:
        environment = event['environment'].lower()
        action = event['action'].lower()
        use_rounds_flag = event.get('use_rounds', False)

        cluster_prefix = 'rounds-' if use_rounds_flag else 'Test-'
        clusters = [f'{cluster_prefix}{environment}']
        instances = []

        for cluster in clusters:
            response = rds_client.describe_db_instances(DBInstanceIdentifier=cluster)
            instances.extend(response['DBInstances'])

        for instance in instances:
            instance_id = instance['DBInstanceIdentifier']
            if instance_id.startswith(cluster_prefix):
                if action == 'on':
                    rds_client.start_db_instance(DBInstanceIdentifier=instance_id)
                    print(f"Started RDS instance: {instance_id}")
                elif action == 'off':
                    rds_client.stop_db_instance(DBInstanceIdentifier=instance_id)
                    print(f"Stopped RDS instance: {instance_id}")

    except Exception as e:
        print(f"Error: {str(e)}")

from flask import Flask, render_template
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options as ChromeOptions

app = Flask(__name__)

@app.route('/')
def display_user_details():
    # Configure Chrome options
    chrome_options = ChromeOptions()
    chrome_options.add_argument('--headless')  # Run Chrome in headless mode
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')

    # Create a Chrome service
    chrome_service = ChromeService(executable_path='/path/to/chromedriver')  # Replace with the path to your chromedriver executable
    chrome_service.start()

    # Create a Chrome driver
    driver = webdriver.Remote(chrome_service.service_url, options=chrome_options)

    # Navigate to the URL
    url = 'https://example.com/user_details'  # Replace with your actual URL
    driver.get(url)

    # Get the HTML content of the page
    html = driver.page_source

    # Close the driver and service
    driver.quit()
    chrome_service.stop()

    # Parse HTML data using BeautifulSoup
    soup = BeautifulSoup(html, 'html.parser')

    # Extract tag values
    username = soup.find('username').text
    age = soup.find('age').text
    email = soup.find('email').text

    # Render HTML template with extracted tag values
    return render_template('user_details.html', username=username, age=age, email=email)

if __name__ == '__main__':
    app.run(debug=True)
